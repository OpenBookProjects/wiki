#summary 每周IRC 站立会议记要
#labels Phase-QA,Featured
[https://www.google.com/calendar/embed?src=ack7dm35is8bkcj65716loq7ag%40group.calendar.google.com CPyUG组织会议提醒]

= 站立会议 =
按照时间线，记录IRC 会议内容 

== 2008 Issue ==
=== 080223 21:00~ ===
 * 理解 *[http://docs.google.com/Doc?id=ah9sz7kfxfhz_272b9rvdk  图书体例分析报告]* 并给出解决方案
{{{
19:15
(19:21:20) 
由 kornbluth.freenode.net 管理(+ns )
(19:21:38) ZoomQuiet: 
是也乎
21:30
(21:32:36) ZoomQuiet: 
嗯嗯嗯，没有人加入IRC
}}}
 * 但是通过邮件，将已经发布到  doc.google 的意见文档分享给了清风，争取周一前给出详细改进规划，并开始文字修订...

*ZoomQuiet 回复080222 编辑意见*

 总则::
  修订的目标是通过博文的出版体系，本书的宗旨不应改变~
   通过 中国Python用户组 里先识先用Python 的行者们的亲身体验，为从来没有听说过Python 的其它语言程序员，准备的一份实用的导学性质图书；
   我们试图将最优化的学习途径和心法，通过故事的方式传达给只有系统学习体验的读者，来分享Pythonic 式的知识获得;
   我们试图将最常用的代码和思路，通过 作弊条 的形式分享给有初步基础的Python 用户，来帮助大家多快好省的完成功能；
   <<Lovely Python>> 不试图成为典藏，在中国推广Python的初期，
   成为学习使用Python 的同好们的沟通话题，引发进一步的学习／应用／创造，就是我们的追求！

*所以，针对性回复编辑的修订意见:*
 * 语言活泼严肃不足 ~ 这是个人文字问题，编辑配合指点，是足以快速修订成的，非常赞同！不过，相应的修订时间就得追加了，活泼有趣且可以通过评审的文字，句式，不是简单可以获得的 Orz
 * 没有很好的起到与网络互动的作用 ~ 这是考虑到纸和网页的不同，原先就建议有光盘附加的，但是考虑到成本问题建议如下:
  * 图书内部通过章节号，将故事和后部知识详说链接起来
  * 在线提供可以根据图书条码加某种认证方式结合，比如说 http://openid.net/ 才允许下载的在线图书版本，制作成本地网站的形式，就可以给出大量链接了
  * 同时有接受图书意见的 http://code.google.com/p/openbookproject/issues/list ，
  * 图书维基 http://wiki.woodpecker.org.cn/moin/ObpLovelyPython
  * 专用列表 http://groups.google.com/group/lovelypython
  * 从而实现丰富的互动
 * 知识广泛度 ~ 可爱的Python 宗旨中指出了，"最常用的代码和思路",知识点绝对不少，而且是精选过的，面向日常80%常见问题域的
 * “用之，不学”理念,但是否为最适合的就很难讲~ 这是应为社区中多数是SA和Web 应用成员，游戏开发人员不多，无法提供最时尚的实例故事，不过，如果此形式可以的话，完全可以寻找作者组织下一本 "可爱的Py游戏开发"
 * "需要快速而又需要性能的系统和软件都可以用python来开发" ~ 这不是我们认同的Py价值哪！应该是重视维护成本高过运行效率的情景，Py最舒服
 * "第二部分内置数据类型前18页的大多数和python不相关的内容建议删除"~ 同意，俺先列出故事中涉及的知识点，然后相关作者进行加强，和增删；建议！将完整版本的内容保留到维基，作为历史文档
 * "等知识点完成后，在实例的小结中加入实例和知识点的相互关" ~ 这是先有鸡，还是先有蛋的问题；
  * 主要困难是在于，使用什么方式进行交叉引用? 
  * 建议是通过边条的正式指向章节名,并附简述,编辑的意见?
 * "Py初学者作弊条汇集"行文问题: 参考 https://obp.everydo.com/projects/599264/todos/157254 撰写任务中的建议,由编辑进行样文准备,以便参照进行批量修订
  * 也可以直接向 http://code.google.com/p/openbookproject/issues/list 提交建议,注意使用`[LovePy]`标签,并选择 `Component-LovePy`对应组件
 * "第2部分的 用Python完成常见任务文字太少"~ 同意,请联系 xyb 合并到 CookBook 中
 * "可以在文中写明社区的相关链接" ~ 考虑到图书中的链接,想访问必须逐一输入,非常的困难
  * 建议前述的可论证网站版图书下载
  * 同时在图书维基中给出专用文章,收集所有相关链接,在前言中给出链接,作为互动的索引入口
 * "自在的Karrigell作为另外一个实例成为本书主体" ~ 同意,俺这就开始调整文字,补充内容,一共7节,加导入和总结,9章的样子,至少需要5周的集中时间哪;(
 * cookbook 相关建议都非常到位,同意合并,请清风協助联系相关作者,确认范围,约定任务,立即推进;)
 *  Py2.5 绝对简明手册 的修订,由黄毅负责,yi.codeplayer@gmail.com 13760493659 ,请编辑追踪进度并给出建议

*目录更改方案*
{{{
0. 引言
1. Py找文件的故事
 -5 PyDay 初体验和原始需求
 -4 PyDay 可用的首个脚本
 -3 PyDay 进行功能化
 -2 PyDay 完成核心功能
 -1 PyDay 实用化，中文!
 PyDay 0 发布的准备
 PyDay 1 优化
 PyDay 2 界面化
 PyDay 3 线程化
 PyDay N 无尽的探索

2．自在的Karrigell(Py网络s开发故事)
   2.1. 缘起
   2.2. K日故事
   2.3. K1日:品尝KarriGell
         1. 准备环境
         2. 动手动脚
         3. 组织开发环境
         4. 规划目标
         5. 实例下载
   2.4. K2日:直接完成功能！
         1. 规划
         2. Cheetah
         3. Leo 组织实现
               1. 干净的处理脚本
               2. 八股文样
         4. 编辑实现
         5. 实现展现
               1. 关键代码
         6. 串联页面
         7. 明日目标
         8. 实例下载
         9. 讨论
   2.5. K3日:发现！
         1. Karrigell_QuickForm
               1. 改造
               2. 利用
         2. JS 问题
               1. 继续发现！
               2. 迁就,先！
                     1. 关键代码
               3. 果然不出所料
         3. 滥用Leo
               1. CSS设计技巧
               2. CSS
         4. 小节
         5. 实例下载
         6. 讨论
   2.6. K4日:KS
         1. lovely session
         2. HTMLTags
         3. 登录
         4. 多问卷选择
               1. fnmatch
               2. 列表所有问卷
         5. 小节
               1. 明日任务
         6. 实例下载
         7. 讨论
   2.7. K5日:随时重构
         1. 悠然 Leo
         2. 调整事务响应
               1. 页面间传递对象
         3. 重构编辑流程
         4. 历史版本
               1. 关键代码
                     1. 进一步的
               2. 可变参数的意义
         5. 明日任务
         6. 实例下载
         7. 讨论
   2.8. K6日:统计！mm的
         1. FreeMind的另类使用
         2. ElementTree,当然的！
         3. Karrigell 的对象混合
         4. 回答验证
         5. 统计汇报
         6. 事务测试
         7. 实例下载
         8. 讨论
   2.9. K日继续:跟自个儿较劲
         1. 自学问卷开发/学习体验图谱
         2. 优化
         3. 经验总结
               1. 有关KarriGell 调试
               2. 有关站点组织
               3. 有关CSS设计
         4. TODO
         5. 实例下载

3. Py初学者作弊条汇集
 3.1. 开发环境
 3.2. 数据类型
 3.3. 过程控制
 3.4. 函数
 3.5. 类与实例
 3.6. 模块与包

4．Py 常见任务处理(加入cookbook内容)

附录
+1. 资源索引
+2. 箴言
+3. 术语索引 
}}}

*当前任务*:
 * 详细的在 https://obp.everydo.com/ 中组织，不过，最优先的，请作者们在 启章先补充说明自个儿的桌面环境吧...
  * 非成员登录使用 User:`guest` ; Passwd:`guest`


 
 

== 2007 Issue ==
 * LovelyPyIrc2007log